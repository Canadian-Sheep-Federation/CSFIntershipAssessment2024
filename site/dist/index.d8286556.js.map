{"mappings":"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","sources":["src/js/cardGrid.js"],"sourcesContent":["// sending request to remote cocktail API to get a random cocktail then using it to populate form\nfunction getRandomCocktail() {\n  fetch(\"https://www.thecocktaildb.com/api/json/v1/1/random.php\")\n    .then(response => response.json())\n    .then(data => {\n      populateFavForm(data.drinks[0]);\n      showPopUp();\n    });\n}\n\n// searching remote cocktail API using keyword entered by User\nfunction searchCockTails() {\n  // Getting the search text to be used to search the cocktail API\n  const searchText = document.getElementById(\"searchText\").value;\n  // Getting the container for the carousel\n  const cocktailContainer = document.getElementById(\"cocktail-container\");\n\n  // sending request to cocktail database\n  fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${encodeURIComponent(searchText)}`)\n    .then(response => response.json())\n    .then(data => {\n      cocktailContainer.innerHTML = '';\n\n      // if drinks return from search\n      if (data.drinks) {\n        data.drinks.forEach(drink => {\n          let drinkDiv = document.createElement('div');\n          drinkDiv.classList.add(\"cocktail-card\");\n\n          // converting ingredients from array to comma-separated string\n          drink.ingredients = getIngredientsStr(drink);\n\n          // Adding event listener for each card to show the favourite form\n          drinkDiv.addEventListener(\"click\", () => {\n            populateFavForm(drink);\n            showPopUp();\n          });\n\n          // drink card structure\n          drinkDiv.innerHTML = `\n          <div class=\"cocktail-image\">\n            <img class=\"cocktail-thumb\" src=\"${drink.strDrinkThumb}\" alt=\"${drink.strDrink}\" \\>\n          </div>\n          <div class=\"cocktail-info\">\n            <h2>${drink.strDrink}</h2>\n            <p class=\"cocktail-instructions\">${drink.strInstructions}</p>\n          </div>\n        `;\n\n          cocktailContainer.appendChild(drinkDiv);\n        });\n      } else {\n        // if there are no drinks then display message\n        cocktailContainer.innerHTML = `\n          <h2>No Results! Try Again.</h2>\n        `\n      }\n    });\n}\n\n// Convert ingredients from array to comma separated string\nfunction getIngredientsStr(drink) {\n  let ingredients = [];\n  for (let i = 0; i < 15; ++i) {\n    if (drink[`strIngredient${i + 1}`])\n      ingredients.push(drink[`strIngredient${i + 1}`]);\n  }\n\n  return ingredients.join(\", \");\n}\n\n// Changing slider number to match slider value\nvar slider = document.getElementById(\"rating\");\nvar sliderNumber = document.getElementById(\"slider-number\");\nsliderNumber.innerHTML = slider.value;\nslider.oninput = function () {\n  sliderNumber.innerHTML = this.value;\n};\n\n\n// Function to populate favourite form with drink that was clicked on by User\nfunction populateFavForm(drink) {\n  let drinkInfo = document.getElementById(\"drink-info\");\n\n  // assigning drinkObj as attribute on drink-info div to be used if user sends POST request\n  drinkInfo.drinkObj = drink;\n\n  // converting ingredients from array to comma-separated string\n  drink.ingredients = getIngredientsStr(drink);\n\n  // resetting slider and notes to default\n  slider.value = 3;\n  sliderNumber.innerHTML = 3;\n  document.getElementById(\"notes\").value = \"\";\n\n  // popup drink structure\n  drinkInfo.innerHTML = `\n    <div class=\"fav-image-div\">\n      <img\n        src=\"${drink.strDrinkThumb}\"\n        alt=\"${drink.strDrink}\"\n      />\n    </div>\n    <h3>${drink.strDrink}</h3>\n    <p><b>Ingredients:</b> ${drink.ingredients}</p>\n    <p>${drink.strInstructions}</p>\n    <p><b>Glass Type:</b> ${drink.strGlass}</p>\n  `;\n}\n\n// Toggling a message confirming that user added drink to favourites list\nfunction toggleMessage(message) {\n  let drinkInfo = document.getElementById(\"drink-div\");\n  let closeBtn = document.getElementById(\"fav-close\");\n  let addedInfo = document.getElementById(\"drink-added\");\n  let messageH3 = document.getElementById(\"message\");\n\n  // checking state of popup and changing based on said state\n  if (drinkInfo.style.display == \"none\" && closeBtn.style.display == \"none\" && addedInfo.style.display == \"block\") {\n    drinkInfo.style.display = \"block\";\n    closeBtn.style.display = \"block\";\n    addedInfo.style.display = \"none\";\n    messageH3.innerText = \"\";\n  } else {\n    drinkInfo.style.display = \"none\";\n    closeBtn.style.display = \"none\";\n    addedInfo.style.display = \"block\";\n    messageH3.innerText = message;\n  }\n}\n\n// Event listener for \"ok\" button on drink added message\ndocument.getElementById(\"close-added\").addEventListener(\"click\", () => {\n  hidePopUp();\n  setTimeout(() => {\n    toggleMessage();\n  }, \"501\");\n});"],"names":[],"version":3,"file":"index.d8286556.js.map","sourceRoot":"/__parcel_source_root/"}