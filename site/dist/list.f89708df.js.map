{"mappings":"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","sources":["src/js/list.js"],"sourcesContent":["// Loading all cocktail list items on page load\nwindow.onload = function () {\n  loadAllFavourites();\n};\n\n// adding event listeners once DOM content is loaded\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // reloading cocktail list when order selector is changed\n  document.getElementById(\"order\").addEventListener(\"change\", () => {\n    loadAllFavourites();\n  });\n\n  // Toggling delete confirm message on popup window\n  function toggleDeleteConfirm() {\n    let favInfo = document.getElementById(\"fav-info-container\");\n    let closeBtn = document.getElementById(\"fav-close\");\n    let deleteInfo = document.getElementById(\"delete-info\");\n\n    // checking the state of the popup and changing depending on said state\n    if (favInfo.style.display == \"none\" && closeBtn.style.display == \"none\" && deleteInfo.style.display == \"block\") {\n      favInfo.style.display = \"block\";\n      closeBtn.style.display = \"block\";\n      deleteInfo.style.display = \"none\";\n    } else {\n      favInfo.style.display = \"none\";\n      closeBtn.style.display = \"none\";\n      deleteInfo.style.display = \"block\";\n    }\n  }\n\n  // Delete button event listener to toggle delete message\n  document.getElementById(\"delete-btn\").addEventListener(\"click\", () => {\n    toggleDeleteConfirm();\n  });\n\n  // Cancel Button toggles info back\n  document.getElementById(\"delete-cancel\").addEventListener(\"click\", () => {\n    toggleDeleteConfirm();\n  });\n\n  // Event listener for delete confirmation button\n  document.getElementById(\"delete-confirm\").addEventListener(\"click\", function deleteItem() {\n    // sending delete request to API, then reloading cocktail list\n    deleteFavourite(this.favId).then(() => {\n      loadAllFavourites();\n    });\n    hidePopUp();\n\n    // toggling the delete confirm message after popup fade out\n    setTimeout(() => {\n      toggleDeleteConfirm();\n    }, \"501\");\n  });\n});\n\n// Generating list items from cocktail list\nfunction generateFavCards(data) {\n  let favContainer = document.getElementById(\"favourite-container\");\n  // resetting existing HTML in list container\n  favContainer.innerHTML = \"\";\n\n  // if there are list items\n  if (data.favourites.length !== 0) {\n    // for each list item, create a card\n    data.favourites.forEach(favourite => {\n      let favDiv = document.createElement(\"div\");\n      favDiv.classList.add(\"favourite-card\");\n\n      // adding event listener to each card to show popup with more details from card\n      favDiv.addEventListener(\"click\", () => {\n        populateFavSummary(favourite);\n        showPopUp();\n      });\n\n      // card structure\n      favDiv.innerHTML = `\n        <img\n          src=\"${favourite.drink_image}\"\n          alt=\"${favourite.drink_name}\"\n        />\n        <div class=\"fav-info\">\n          <h3>${favourite.drink_name}</h3>\n          <p><b>Rating:</b> ${favourite.rating}/5</p>\n          <p><b>Difficulty:</b> ${favourite.difficulty}</p>\n          <p>${favourite.date_added.slice(0, 10)}</p>\n          <p>${favourite.notes}</p>\n        </div>\n      `;\n\n      favContainer.appendChild(favDiv);\n    });\n  } else {\n    // if there are no list items then display this message\n    favContainer.innerHTML = `\n      <h3>Nothing Here...</h3>\n    `\n  }\n}\n\n// Function to populate favourite drink summary based on favourite that user clicked\nfunction populateFavSummary(favourite) {\n  let favInfo = document.getElementById(\"fav-info\");\n\n  // setting favId attribute of delete confirm button to the current item id \\\n  // so that it can be used if the user wants to delete this item\n  document.getElementById(\"delete-confirm\").favId = favourite.id;\n\n  // popup structure\n  favInfo.innerHTML = `\n    <div class=\"fav-image-div\">\n      <img\n        src=\"${favourite.drink_image}\"\n        alt=\"${favourite.drink_name}\"\n      />\n    </div>\n    <h3>${favourite.drink_name}</h3>\n    <p><b>Ingredients: </b>${favourite.ingredients}</p>\n    <p>${favourite.instructions}</p>\n    <p><b>Glass Type:</b> ${favourite.glass_type}</p>\n    <p><b>Rating:</b> ${favourite.rating}/5</p>\n    <p><b>Difficulty:</b> ${favourite.difficulty}</p>\n    <p><b>Notes:</b> ${favourite.notes}</p>\n    <p>${favourite.date_added.slice(0, 10)}</p>\n  `;\n}\n\n"],"names":[],"version":3,"file":"list.f89708df.js.map","sourceRoot":"/__parcel_source_root/"}